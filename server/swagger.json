{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"QuizOption": {
				"properties": {
					"text": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"text",
					"id"
				],
				"type": "object"
			},
			"QuizResponse": {
				"properties": {
					"quizId": {
						"type": "string"
					},
					"quizCompleted": {
						"type": "boolean"
					},
					"previouslyQuestion_CorrectOptionId": {
						"type": "string"
					},
					"options": {
						"items": {
							"$ref": "#/components/schemas/QuizOption"
						},
						"type": "array"
					},
					"questionId": {
						"type": "string"
					},
					"questionText": {
						"type": "string"
					}
				},
				"required": [
					"options",
					"questionId",
					"questionText"
				],
				"type": "object"
			},
			"QuizRequestBody": {
				"properties": {
					"optionId": {
						"type": "string"
					},
					"questionId": {
						"type": "string"
					}
				},
				"required": [
					"optionId",
					"questionId"
				],
				"type": "object"
			},
			"EpilogueOption": {
				"properties": {
					"text": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"text",
					"id"
				],
				"type": "object"
			},
			"EpilogueQuestion": {
				"properties": {
					"options": {
						"items": {
							"$ref": "#/components/schemas/EpilogueOption"
						},
						"type": "array"
					},
					"text": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"options",
					"text",
					"id"
				],
				"type": "object"
			},
			"Epilogue": {
				"properties": {
					"questions": {
						"items": {
							"$ref": "#/components/schemas/EpilogueQuestion"
						},
						"type": "array"
					},
					"textStoryTale": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"questions",
					"textStoryTale",
					"name",
					"id"
				],
				"type": "object"
			},
			"EpilogueQuestionProgress": {
				"properties": {
					"question": {
						"$ref": "#/components/schemas/EpilogueQuestion"
					},
					"userStoryId": {
						"type": "string"
					},
					"questionId": {
						"type": "string"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"userStoryId",
					"questionId",
					"order",
					"id"
				],
				"type": "object"
			},
			"EpilogueProgress": {
				"properties": {
					"timeCompleted": {
						"type": "number",
						"format": "double"
					},
					"timeStarted": {
						"type": "number",
						"format": "double"
					},
					"timeUnlocked": {
						"type": "number",
						"format": "double"
					},
					"timeSummaryCompleted": {
						"type": "number",
						"format": "double"
					},
					"questionProgressItems": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/EpilogueQuestionProgress"
						},
						"type": "object"
					},
					"lessonStoryId": {
						"type": "string"
					},
					"userStoryId": {
						"type": "string"
					},
					"epilogue": {
						"$ref": "#/components/schemas/Epilogue"
					},
					"epilogueId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"questionProgressItems",
					"lessonStoryId",
					"userStoryId",
					"epilogueId",
					"id"
				],
				"type": "object"
			},
			"Word": {
				"properties": {
					"longTranslation": {
						"type": "string"
					},
					"shortTranslation": {
						"type": "string"
					},
					"text": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"longTranslation",
					"shortTranslation",
					"text",
					"id"
				],
				"type": "object"
			},
			"BuildingBlock": {
				"properties": {
					"words": {
						"items": {
							"$ref": "#/components/schemas/Word"
						},
						"type": "array"
					},
					"isStarter": {
						"type": "boolean"
					},
					"idsItemsDependentOnThis": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"imageUrl": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"words",
					"isStarter",
					"imageUrl",
					"name",
					"id"
				],
				"type": "object"
			},
			"WordProgress": {
				"properties": {
					"word": {
						"$ref": "#/components/schemas/Word"
					},
					"wordId": {
						"type": "string"
					},
					"userStoryId": {
						"type": "string"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"wordId",
					"userStoryId",
					"order",
					"id"
				],
				"type": "object"
			},
			"BuildingBlockProgress": {
				"properties": {
					"timeSummaryCompleted": {
						"type": "number",
						"format": "double"
					},
					"timeCompleted": {
						"type": "number",
						"format": "double"
					},
					"timeStarted": {
						"type": "number",
						"format": "double"
					},
					"timeUnlocked": {
						"type": "number",
						"format": "double"
					},
					"isStarter": {
						"type": "boolean"
					},
					"wordProgressItems": {
						"properties": {},
						"additionalProperties": {
							"$ref": "#/components/schemas/WordProgress"
						},
						"type": "object"
					},
					"lessonStoryId": {
						"type": "string"
					},
					"userStoryId": {
						"type": "string"
					},
					"isDependentOnNames": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"block": {
						"$ref": "#/components/schemas/BuildingBlock"
					},
					"blockId": {
						"type": "string"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"isStarter",
					"wordProgressItems",
					"lessonStoryId",
					"userStoryId",
					"blockId",
					"order",
					"id"
				],
				"type": "object"
			},
			"QuizBlockCompletedStatsResponse": {
				"properties": {
					"blockCompletedStoryRefId": {
						"type": "string"
					},
					"blockCompleted": {
						"$ref": "#/components/schemas/BuildingBlockProgress"
					},
					"blockProgressUnlockedItems": {
						"items": {
							"$ref": "#/components/schemas/BuildingBlockProgress"
						},
						"type": "array"
					},
					"epilogueProgressUnlocked": {
						"$ref": "#/components/schemas/EpilogueProgress"
					}
				},
				"required": [
					"blockCompletedStoryRefId"
				],
				"type": "object"
			},
			"Pick_BuildingBlockProgress.Exclude_keyofBuildingBlockProgress.wordProgressItems__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"blockId": {
						"type": "string"
					},
					"block": {
						"$ref": "#/components/schemas/BuildingBlock"
					},
					"isDependentOnNames": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"userStoryId": {
						"type": "string"
					},
					"lessonStoryId": {
						"type": "string"
					},
					"isStarter": {
						"type": "boolean"
					},
					"timeUnlocked": {
						"type": "number",
						"format": "double"
					},
					"timeStarted": {
						"type": "number",
						"format": "double"
					},
					"timeCompleted": {
						"type": "number",
						"format": "double"
					},
					"timeSummaryCompleted": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"order",
					"blockId",
					"userStoryId",
					"lessonStoryId",
					"isStarter"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_BuildingBlockProgress.wordProgressItems_": {
				"$ref": "#/components/schemas/Pick_BuildingBlockProgress.Exclude_keyofBuildingBlockProgress.wordProgressItems__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"BuildingBlockProgressOutput": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_BuildingBlockProgress.wordProgressItems_"
					},
					{
						"properties": {
							"wordProgressItems": {
								"items": {
									"$ref": "#/components/schemas/WordProgress"
								},
								"type": "array"
							}
						},
						"required": [
							"wordProgressItems"
						],
						"type": "object"
					}
				]
			},
			"Pick_EpilogueProgress.Exclude_keyofEpilogueProgress.questionProgressItems__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"userStoryId": {
						"type": "string"
					},
					"lessonStoryId": {
						"type": "string"
					},
					"timeUnlocked": {
						"type": "number",
						"format": "double"
					},
					"timeStarted": {
						"type": "number",
						"format": "double"
					},
					"timeCompleted": {
						"type": "number",
						"format": "double"
					},
					"timeSummaryCompleted": {
						"type": "number",
						"format": "double"
					},
					"epilogueId": {
						"type": "string"
					},
					"epilogue": {
						"$ref": "#/components/schemas/Epilogue"
					}
				},
				"required": [
					"id",
					"userStoryId",
					"lessonStoryId",
					"epilogueId"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_EpilogueProgress.questionProgressItems_": {
				"$ref": "#/components/schemas/Pick_EpilogueProgress.Exclude_keyofEpilogueProgress.questionProgressItems__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"EpilogueProgressOutput": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_EpilogueProgress.questionProgressItems_"
					},
					{
						"properties": {
							"questionProgressItems": {
								"items": {
									"$ref": "#/components/schemas/EpilogueQuestionProgress"
								},
								"type": "array"
							}
						},
						"required": [
							"questionProgressItems"
						],
						"type": "object"
					}
				]
			},
			"Pick_UserStory.Exclude_keyofUserStory.buildingBlocksProgressItems-or-epilogueProgress__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"order": {
						"type": "number",
						"format": "double"
					},
					"isDependentOnNames": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"timeUnlocked": {
						"type": "number",
						"format": "double"
					},
					"timeStarted": {
						"type": "number",
						"format": "double"
					},
					"timeCompleted": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"imageUrl": {
						"type": "string"
					},
					"storyId": {
						"type": "string"
					},
					"idsDependentOnThisUserStory": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"numOfBlocksCompleted": {
						"type": "number",
						"format": "double"
					},
					"numOfTotalBlocks": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"order",
					"name",
					"description",
					"imageUrl",
					"storyId",
					"numOfBlocksCompleted",
					"numOfTotalBlocks"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_UserStory.buildingBlocksProgressItems-or-epilogueProgress_": {
				"$ref": "#/components/schemas/Pick_UserStory.Exclude_keyofUserStory.buildingBlocksProgressItems-or-epilogueProgress__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserStoryOutput": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_UserStory.buildingBlocksProgressItems-or-epilogueProgress_"
					},
					{
						"properties": {
							"epilogueProgress": {
								"$ref": "#/components/schemas/EpilogueProgressOutput"
							},
							"buildingBlocksProgressItems": {
								"items": {
									"$ref": "#/components/schemas/BuildingBlockProgressOutput"
								},
								"type": "array"
							}
						},
						"required": [
							"epilogueProgress",
							"buildingBlocksProgressItems"
						],
						"type": "object"
					}
				]
			}
		},
		"securitySchemes": {
			"BearerAuth": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header",
				"description": "Bearer token"
			}
		}
	},
	"info": {
		"title": "lang-learning-app-server",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/blocks/{blockProgressId}/quiz/request-question": {
			"post": {
				"operationId": "RequestQuizQuestion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/QuizResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Quiz - Builiding blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "blockProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/blocks/{blockProgressId}/quiz/answer-question": {
			"post": {
				"operationId": "AnswerQuizQuestion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/QuizResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Quiz - Builiding blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "blockProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QuizRequestBody"
							}
						}
					}
				}
			}
		},
		"/api/blocks/{blockProgressId}/quiz/{quizId}/completed": {
			"get": {
				"operationId": "GetProgressAchievedOfCompletedQuiz",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/QuizBlockCompletedStatsResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Quiz - Builiding blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "blockProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "quizId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/blocks/{blockProgressId}": {
			"get": {
				"operationId": "GetBlockProgress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BuildingBlockProgressOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Building blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "blockProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/blocks/{blockProgressId}/complete-summary": {
			"post": {
				"operationId": "CompleteSummary",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Building blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "blockProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/epilogues/{epilogueProgressId}": {
			"get": {
				"operationId": "GetEpilogueProgress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EpilogueProgressOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Epilogue blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "epilogueProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/epilogues/{epilogueProgressId}/complete-summary": {
			"post": {
				"operationId": "CompleteSummary",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"Epilogue blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "epilogueProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/epilogues/{epilogueProgressId}/quiz/request-question": {
			"post": {
				"operationId": "RequestQuizQuestion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/QuizResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Quiz - Epilogue blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "epilogueProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/epilogues/{epilogueProgressId}/quiz": {
			"post": {
				"operationId": "AnswerQuizQuestion",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/QuizResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Quiz - Epilogue blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "epilogueProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/QuizRequestBody"
							}
						}
					}
				}
			}
		},
		"/api/epilogues/{epilogueProgressId}/quiz/{quizId}/completed": {
			"get": {
				"operationId": "GetProgressAchievedOfCompletedQuiz",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/QuizBlockCompletedStatsResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Quiz - Epilogue blocks"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "epilogueProgressId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "quizId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/userStories": {
			"get": {
				"operationId": "GetStories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserStoryOutput"
									},
									"type": "array"
								},
								"examples": {
									"Example 1": {
										"value": [
											{
												"id": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
												"idsDependentOnThisUserStory": [
													"e99cf33b-d850-438f-9324-356c4b3f4116",
													"aa278c3d-f899-4c19-9a88-a3ff519df1a2",
													"afc7585d-f9e1-419b-a213-4a7cf66f0d14",
													"cf315d89-e763-41fb-a111-8d43bc8e0b96"
												],
												"imageUrl": "some url/3807395/pexels-photo-3807395.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
												"name": "My family #1",
												"numOfBlocksCompleted": 7,
												"numOfTotalBlocks": 7,
												"order": 0,
												"storyId": "ca4e66d9-1d53-44cd-bc1d-b2cd9f035f3c",
												"timeCompleted": 1684716464631,
												"timeStarted": 1684716464631,
												"timeUnlocked": 1684716464631,
												"buildingBlocksProgressItems": [
													{
														"blockId": "2f1407f7-5d62-43e0-a7ea-1520bebdddf2",
														"id": "b08bd582-8f2e-47fe-adba-f16c30d87ac0",
														"isStarter": true,
														"lessonStoryId": "ca4e66d9-1d53-44cd-bc1d-b2cd9f035f3c",
														"order": 0,
														"timeCompleted": 1684716464631,
														"timeStarted": 1684716464631,
														"timeSummaryCompleted": 1684716464631,
														"timeUnlocked": 1684716464631,
														"userStoryId": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
														"wordProgressItems": [
															{
																"id": "e49ef4ed-1999-4db8-aa4c-3740063b8efa",
																"order": 0,
																"userStoryId": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
																"wordId": "62364798-e974-4739-ad8e-b3aac079fed5",
																"word": {
																	"id": "62364798-e974-4739-ad8e-b3aac079fed5",
																	"longTranslation": "A group consisting of parents and children living together in a household",
																	"shortTranslation": "family",
																	"text": "семьей"
																}
															}
														],
														"block": {
															"id": "2f1407f7-5d62-43e0-a7ea-1520bebdddf2",
															"idsItemsDependentOnThis": [
																"28e74a16-6114-4c50-815e-631cfd7b3a5e",
																"c22b3077-b670-4ac8-8f21-a0a10125cb9e"
															],
															"imageUrl": "some url/3807561/pexels-photo-3807561.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
															"isStarter": true,
															"name": "Family",
															"words": [
																{
																	"id": "62364798-e974-4739-ad8e-b3aac079fed5",
																	"longTranslation": "A group consisting of parents and children living together in a household",
																	"shortTranslation": "family",
																	"text": "семьей"
																}
															]
														}
													}
												],
												"description": "Example: COMPLETED",
												"epilogueProgress": {
													"epilogueId": "51c76980-f429-4b41-8300-22af4bee00a3",
													"id": "524291bb-0ff9-4323-abf4-d90dbc88ad77",
													"lessonStoryId": "ca4e66d9-1d53-44cd-bc1d-b2cd9f035f3c",
													"questionProgressItems": [
														{
															"id": "c1cd814e-c4e7-49f1-811b-89869ee04669",
															"order": 0,
															"questionId": "023ab9c9-0e57-4f89-96a1-8bf6072d59cd",
															"userStoryId": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
															"question": {
																"id": "023ab9c9-0e57-4f89-96a1-8bf6072d59cd",
																"options": [
																	{
																		"id": "39d5eda3-8a0e-45aa-9d4d-a52f4d8b5e8c",
																		"text": "Anna's mom and dad"
																	},
																	{
																		"id": "553d4c68-44fc-4b5c-ada8-c3d78873a886",
																		"text": "Anna's brother and sister"
																	},
																	{
																		"id": "48a32a2d-a0fb-42a6-87a4-e2f8014fa3c1",
																		"text": "Anna's grandparents"
																	},
																	{
																		"id": "31bb47d5-141a-4bd5-a0d0-b5a5956c5162",
																		"text": "Anna's aunt and uncle"
																	}
																],
																"text": "Who does Anna live with?"
															}
														}
													],
													"timeCompleted": 1684716464631,
													"timeStarted": 1684716464631,
													"timeSummaryCompleted": 1684716464631,
													"timeUnlocked": 1684716464631,
													"userStoryId": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
													"epilogue": {
														"id": "51c76980-f429-4b41-8300-22af4bee00a3",
														"name": "Anna's family",
														"questions": [
															{
																"id": "023ab9c9-0e57-4f89-96a1-8bf6072d59cd",
																"options": [
																	{
																		"id": "39d5eda3-8a0e-45aa-9d4d-a52f4d8b5e8c",
																		"text": "Anna's mom and dad"
																	},
																	{
																		"id": "553d4c68-44fc-4b5c-ada8-c3d78873a886",
																		"text": "Anna's brother and sister"
																	},
																	{
																		"id": "48a32a2d-a0fb-42a6-87a4-e2f8014fa3c1",
																		"text": "Anna's grandparents"
																	},
																	{
																		"id": "31bb47d5-141a-4bd5-a0d0-b5a5956c5162",
																		"text": "Anna's aunt and uncle"
																	}
																],
																"text": "Who does Anna live with?"
															}
														],
														"textStoryTale": "\"Семья Анны\"\n  \n      Меня зовут Анна. Я живу вместе со своей семьей: мамой, папой и братом. Моя мама зовут Катя, а папа - Иван. Мой брат Александр младше меня на два года.\n  \n      Мы любим проводить время вместе. Часто мы гуляем в парке, играем в футбол и готовим вкусную еду. Я люблю готовить блины, а папа обычно готовит мясо на гриле. Брат Александр помогает мне смешивать тесто.\n  \n      Я учусь в школе и занимаюсь каждый день. Мне нравится учиться русскому языку. Я говорю \"я\", когда говорю о себе, и \"ты\", когда обращаюсь к брату или другу. Моя мама и папа говорят \"они\" о других людях.\n  \n      Когда я возвращаюсь домой после школы, я обычно делаю уроки и помогаю маме приготовить ужин. Потом мы все вместе садимся за стол и едим вкусную еду, говоря о нашем дне. Я люблю мою семью и всегда рада проводить время вместе с ними."
													}
												}
											}
										]
									}
								}
							}
						}
					}
				},
				"description": "Get user stories for the current user. Each user story contains information from the lesson story associated and the progress of the user.",
				"tags": [
					"User Stories"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": []
			}
		},
		"/api/userStories/{id}": {
			"get": {
				"operationId": "GetStory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserStoryOutput"
								},
								"examples": {
									"Example 1": {
										"value": {
											"id": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
											"idsDependentOnThisUserStory": [
												"e99cf33b-d850-438f-9324-356c4b3f4116",
												"aa278c3d-f899-4c19-9a88-a3ff519df1a2",
												"afc7585d-f9e1-419b-a213-4a7cf66f0d14",
												"cf315d89-e763-41fb-a111-8d43bc8e0b96"
											],
											"imageUrl": "some url/3807395/pexels-photo-3807395.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
											"name": "My family #1",
											"numOfBlocksCompleted": 7,
											"numOfTotalBlocks": 7,
											"order": 0,
											"storyId": "ca4e66d9-1d53-44cd-bc1d-b2cd9f035f3c",
											"timeCompleted": 1684716464631,
											"timeStarted": 1684716464631,
											"timeUnlocked": 1684716464631,
											"buildingBlocksProgressItems": [
												{
													"blockId": "2f1407f7-5d62-43e0-a7ea-1520bebdddf2",
													"id": "b08bd582-8f2e-47fe-adba-f16c30d87ac0",
													"isStarter": true,
													"lessonStoryId": "ca4e66d9-1d53-44cd-bc1d-b2cd9f035f3c",
													"order": 0,
													"timeCompleted": 1684716464631,
													"timeStarted": 1684716464631,
													"timeSummaryCompleted": 1684716464631,
													"timeUnlocked": 1684716464631,
													"userStoryId": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
													"wordProgressItems": [
														{
															"id": "e49ef4ed-1999-4db8-aa4c-3740063b8efa",
															"order": 0,
															"userStoryId": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
															"wordId": "62364798-e974-4739-ad8e-b3aac079fed5",
															"word": {
																"id": "62364798-e974-4739-ad8e-b3aac079fed5",
																"longTranslation": "A group consisting of parents and children living together in a household",
																"shortTranslation": "family",
																"text": "семьей"
															}
														}
													],
													"block": {
														"id": "2f1407f7-5d62-43e0-a7ea-1520bebdddf2",
														"idsItemsDependentOnThis": [
															"28e74a16-6114-4c50-815e-631cfd7b3a5e",
															"c22b3077-b670-4ac8-8f21-a0a10125cb9e"
														],
														"imageUrl": "some url/3807561/pexels-photo-3807561.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
														"isStarter": true,
														"name": "Family",
														"words": [
															{
																"id": "62364798-e974-4739-ad8e-b3aac079fed5",
																"longTranslation": "A group consisting of parents and children living together in a household",
																"shortTranslation": "family",
																"text": "семьей"
															}
														]
													}
												}
											],
											"description": "Example: COMPLETED",
											"epilogueProgress": {
												"epilogueId": "51c76980-f429-4b41-8300-22af4bee00a3",
												"id": "524291bb-0ff9-4323-abf4-d90dbc88ad77",
												"lessonStoryId": "ca4e66d9-1d53-44cd-bc1d-b2cd9f035f3c",
												"questionProgressItems": [
													{
														"id": "c1cd814e-c4e7-49f1-811b-89869ee04669",
														"order": 0,
														"questionId": "023ab9c9-0e57-4f89-96a1-8bf6072d59cd",
														"userStoryId": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
														"question": {
															"id": "023ab9c9-0e57-4f89-96a1-8bf6072d59cd",
															"options": [
																{
																	"id": "39d5eda3-8a0e-45aa-9d4d-a52f4d8b5e8c",
																	"text": "Anna's mom and dad"
																},
																{
																	"id": "553d4c68-44fc-4b5c-ada8-c3d78873a886",
																	"text": "Anna's brother and sister"
																},
																{
																	"id": "48a32a2d-a0fb-42a6-87a4-e2f8014fa3c1",
																	"text": "Anna's grandparents"
																},
																{
																	"id": "31bb47d5-141a-4bd5-a0d0-b5a5956c5162",
																	"text": "Anna's aunt and uncle"
																}
															],
															"text": "Who does Anna live with?"
														}
													}
												],
												"timeCompleted": 1684716464631,
												"timeStarted": 1684716464631,
												"timeSummaryCompleted": 1684716464631,
												"timeUnlocked": 1684716464631,
												"userStoryId": "c0afe77d-8cbe-4a16-9e71-efb4a3a01b82",
												"epilogue": {
													"id": "51c76980-f429-4b41-8300-22af4bee00a3",
													"name": "Anna's family",
													"questions": [
														{
															"id": "023ab9c9-0e57-4f89-96a1-8bf6072d59cd",
															"options": [
																{
																	"id": "39d5eda3-8a0e-45aa-9d4d-a52f4d8b5e8c",
																	"text": "Anna's mom and dad"
																},
																{
																	"id": "553d4c68-44fc-4b5c-ada8-c3d78873a886",
																	"text": "Anna's brother and sister"
																},
																{
																	"id": "48a32a2d-a0fb-42a6-87a4-e2f8014fa3c1",
																	"text": "Anna's grandparents"
																},
																{
																	"id": "31bb47d5-141a-4bd5-a0d0-b5a5956c5162",
																	"text": "Anna's aunt and uncle"
																}
															],
															"text": "Who does Anna live with?"
														}
													],
													"textStoryTale": "\"Семья Анны\"\n  \n      Меня зовут Анна. Я живу вместе со своей семьей: мамой, папой и братом. Моя мама зовут Катя, а папа - Иван. Мой брат Александр младше меня на два года.\n  \n      Мы любим проводить время вместе. Часто мы гуляем в парке, играем в футбол и готовим вкусную еду. Я люблю готовить блины, а папа обычно готовит мясо на гриле. Брат Александр помогает мне смешивать тесто.\n  \n      Я учусь в школе и занимаюсь каждый день. Мне нравится учиться русскому языку. Я говорю \"я\", когда говорю о себе, и \"ты\", когда обращаюсь к брату или другу. Моя мама и папа говорят \"они\" о других людях.\n  \n      Когда я возвращаюсь домой после школы, я обычно делаю уроки и помогаю маме приготовить ужин. Потом мы все вместе садимся за стол и едим вкусную еду, говоря о нашем дне. Я люблю мою семью и всегда рада проводить время вместе с ними."
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"description": "Get the specified user story for the current user.\r\nEach user story contains information from the lesson story associated and the progress of the user.",
				"tags": [
					"User Stories"
				],
				"security": [
					{
						"BearerAuth": []
					}
				],
				"parameters": [
					{
						"description": "Id of the user story",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "e77ef155-bd12-46f0-8559-bf55f6dd4c63"
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}